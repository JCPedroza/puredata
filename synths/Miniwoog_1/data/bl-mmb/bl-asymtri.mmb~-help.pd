#N canvas 140 77 1077 771 10;
#X obj 77 89 mtof;
#X obj 77 173 line~;
#X floatatom 126 106 0 0 0 0 - - -;
#X floatatom 77 66 5 0 0 0 - - -;
#X obj 78 436 lin-xfade.mmb~;
#X obj 191 416 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 279 286 0;
#X obj 126 149 /;
#X floatatom 126 172 0 0 0 0 - - -;
#X msg 126 129 22050 \$1;
#X msg 77 118 \$1 200;
#X text 117 67 MIDI note number;
#X text 176 105 frequency;
#X text 170 174 harmonics;
#X obj 77 40 r fundamental;
#X text 309 286 sync phases;
#X obj 79 598 dac~;
#X obj 109 514 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 105 542 dbtorms;
#X obj 79 568 *~;
#N canvas 122 211 558 609 fft 0;
#X obj 19 61 inlet~;
#X obj 208 212 inlet;
#X obj 29 92 rfft~;
#X obj 29 125 *~;
#X obj 60 125 *~;
#X obj 29 155 sqrt~;
#X obj 332 109 block~ 4096 1;
#X obj 29 181 biquad~ 0 0 0 0 1;
#X text 93 93 Fourier series;
#X text 98 146 magnitude;
#X text 96 131 calculate;
#X text 21 3 This subpatch computes the spectrum of the incoming signal
with a (rectangular windowed) FFT. FFTs aren't properly introduced
until much later.;
#X text 83 61 signal to analyze;
#X text 193 164 delay two samples;
#X text 191 182 for better graphing;
#X obj 19 459 samplerate~;
#X obj 19 436 bng 18 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X floatatom 19 506 5 0 0 0 - - -;
#X obj 19 482 / 256;
#X obj 19 412 loadbang;
#X text 17 359 At load time \, calculate a good choice of fundamental
frequency for showing spectra: the 16th bin in a 4096-point spectrum
\, so SR*16/4096 or SR/256.;
#X obj 231 259 metro 500;
#X obj 231 236 inlet;
#X text 284 234 toggle to graph repeatedly;
#X text 262 212 bang to graph once;
#X obj 19 528 t b f;
#X text 25 585 set carrier multiplier after fundamental;
#X msg 209 322 \; pd dsp 1;
#X obj 29 205 /~ 512;
#X obj 123 549 s fundamental;
#X obj 119 519 ftom;
#X obj 231 298 tabwrite~ \$0-spectrum;
#X obj 19 295 tabwrite~ \$0-signal;
#X connect 0 0 2 0;
#X connect 0 0 32 0;
#X connect 1 0 27 0;
#X connect 1 0 31 0;
#X connect 1 0 32 0;
#X connect 2 0 3 0;
#X connect 2 0 3 1;
#X connect 2 1 4 0;
#X connect 2 1 4 1;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 7 0 28 0;
#X connect 15 0 18 0;
#X connect 16 0 15 0;
#X connect 17 0 25 0;
#X connect 18 0 17 0;
#X connect 19 0 16 0;
#X connect 21 0 31 0;
#X connect 21 0 32 0;
#X connect 22 0 21 0;
#X connect 22 0 27 0;
#X connect 25 1 30 0;
#X connect 28 0 31 0;
#X connect 30 0 29 0;
#X restore 123 482 pd fft;
#X obj 183 461 bng 18 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 183 482 tgl 18 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X text 204 481 <-- repeatedly;
#X text 205 461 <-- graph once;
#X text 333 416 <-- move this slider to compare;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-spectrum 2048 float 0;
#X coords 0 0.2 2047 -0.008 512 130 1;
#X restore 532 501 graph;
#N canvas 79 459 1218 301 (subpatch) 0;
#X array \$0-signal 441 float 0;
#X coords 0 1.02 440 -1.02 200 80 1;
#X restore 293 543 graph;
#X text 302 629 ---- 0.02 seconds ----;
#X text 379 527 WAVEFORM;
#X obj 380 119 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 380 141 \; pd dsp \$1;
#X text 284 76 REQUIRED! -->;
#X floatatom 185 231 5 0 100 1 - #0-pulse.width -;
#X obj 185 251 / 100;
#X obj 185 274 sig~;
#X obj 380 186 loadbang;
#X msg 380 208 50;
#X obj 380 233 s \$0-pulse.width;
#X obj 77 317 bl-asymtri.mmb~ \$0;
#X text 184 400 bl-asymtri;
#X text 260 400 perfect asymtri;
#N canvas 748 33 478 445 perfectasymtri 0;
#X obj 109 75 inlet~;
#X obj 169 75 inlet~;
#X obj 239 75 inlet;
#X obj 109 126 vphasor.mmb~;
#X obj 220 159 clip~ 0 1;
#X obj 148 390 outlet~;
#X obj 238 218 *~ -1;
#X obj 138 225 expr~ 1/$v1;
#X obj 120 256 *~;
#X obj 238 243 +~ 2;
#X obj 182 305 min~;
#X obj 236 268 *~;
#X obj 293 223 expr~ 1/(1-$v1);
#X obj 157 347 -~ 1;
#X obj 109 186 *~ 2;
#X obj 37 156 +~ 1.5;
#X obj 37 182 wrap~;
#X obj 218 121 expr~ 1-$v1;
#X connect 0 0 3 0;
#X connect 1 0 17 0;
#X connect 2 0 3 1;
#X connect 3 0 15 0;
#X connect 4 0 7 0;
#X connect 4 0 12 0;
#X connect 6 0 9 0;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 13 0;
#X connect 11 0 10 1;
#X connect 12 0 11 1;
#X connect 13 0 5 0;
#X connect 14 0 8 0;
#X connect 14 0 6 0;
#X connect 15 0 16 0;
#X connect 16 0 14 0;
#X connect 17 0 4 0;
#X restore 202 318 pd perfectasymtri;
#X text 218 231 <-- peak position;
#X text 622 307 IMPORTANT: [bl-init.mmb] is the object that generates
the wavetables \, and at least one instance of it is required.;
#X text 636 251 arg1 <optional>: name corresponding to an instance
of [bl-init.mmb] with the same argument. Default is 0;
#X text 635 110 BANDLIMITED ASYMMETRICAL TRIANGLE WAVE;
#X text 624 142 This generates a bandlimited triangle wave with a sample-accurate
phase reset. The peak of the wave can be adjusted to shift from triangle
to sawtooth waves. This does not actually generate true triangle/saw
waves \, however \, as it is based on summing parabolas. Instead \,
it's more of a reasonable approximation.;
#X obj 373 78 bl-init.mmb \$0;
#X connect 0 0 10 0;
#X connect 0 0 2 0;
#X connect 1 0 39 0;
#X connect 1 0 42 0;
#X connect 2 0 9 0;
#X connect 3 0 0 0;
#X connect 4 0 20 0;
#X connect 4 0 19 0;
#X connect 5 0 4 2;
#X connect 6 0 39 2;
#X connect 6 0 42 2;
#X connect 7 0 8 0;
#X connect 9 0 7 0;
#X connect 10 0 1 0;
#X connect 14 0 3 0;
#X connect 17 0 18 0;
#X connect 18 0 19 1;
#X connect 19 0 16 1;
#X connect 19 0 16 0;
#X connect 21 0 20 1;
#X connect 22 0 20 2;
#X connect 30 0 31 0;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X connect 35 0 39 1;
#X connect 35 0 42 1;
#X connect 36 0 37 0;
#X connect 37 0 38 0;
#X connect 39 0 4 0;
#X connect 42 0 4 1;
